import java.util.*;

public class LeetcodeproblemsString {

	public static void main(String[] args) {
		/*
		 * String[] sent = {"alice and bob love leetcode", "i think so too",
		 * "this is great thanks very much"}; mostwordfound(sent);
		 */

		/*
		 * String s = "chopper is not a tanuki"; int k = 4;
		 * 
		 * truncateSentence(s, k);
		 * 
		 * 
		 */
		/*
		 * String s = "is2 sentence4 This1 a3";
		 * 
		 * sortsentence(s);
		 */
		String word = "abcdefd";
		Character ch = 'd';
		reversePrefix(word, ch);

	}

	private static String reversePrefix(String word, Character ch) {
		/*
		 * String s = String.valueOf(ch); String num = String.valueOf(ch);
		 */
		String latest = "";
		for(int i =0 ; i< word.length()-1 ; i++) {
		
			if(word.charAt(i)== ch) {
				break;
			}
		
		}
		return  latest.trim();

	}

	private static void reversePrefix() {
		// TODO Auto-generated method stub

	}

	private static String sortsentence(String s) {

		String latest = "";
		String split[] = s.split(" ");
		HashMap<String, String> map = new HashMap<>();
		for (String s1 : split) {
			String num = s1.substring(s1.length() - 1);
			s1 = s1.substring(0, s1.length() - 1);

			map.put(num, s1);

		}

		for (Map.Entry<String, String> m : map.entrySet()) {
			latest = latest + m.getValue() + " ";
		}
		return latest.trim();
	}

	private static String truncateSentence(String s, int k) {
		// HashMap<Integer, String> map = new HashMap<>();
		String split[] = s.split(" ");
		String latest = "";
		for (int i = 0; i < k; i++) {
			latest = latest + split[i] + " ";
		}
		return latest;
	}

	private static Integer mostwordfound(String[] sent) {

		int countLength = 0;
		ArrayList<Integer> as = new ArrayList<>();

		for (String s : sent) {

			String split[] = s.split(" ");
			countLength = split.length;
			as.add(countLength);
		}

		Integer ass = Collections.max(as);

		return ass;

	}

}
